{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"\u4ecb\u7ecd"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"chinese/","text":"\u4e2d\u6587 \u7b80\u4ecb cauto\u7c7b\u4f3c\u4e8epython\u7684pyautogui\uff0c\u4f46cauto\u4f7f\u7528c\u8bed\u8a00\u5f00\u53d1\uff0c\u76ee\u524d\u652f\u6301\u4ee5\u4e0b\u64cd\u4f5c\uff1a - \u6a21\u62df\u952e\u76d8\u6309\u952e\u70b9\u51fb - \u6a21\u62df\u9f20\u6807\u6309\u952e\u70b9\u51fb - \u6a21\u62df\u9f20\u6807\u7684\u79fb\u52a8 - \u6a21\u62df\u9f20\u6807\u6eda\u8f6e\u6eda\u52a8 - \u53ef\u4ee5\u5728\u5c4f\u5e55\u4e0a\u67e5\u627e\u56fe\u7247\u7684\u4f4d\u7f6e \u76ee\u524d\u53ea\u652f\u6301windows\u73af\u5883 \u7f16\u8bd1\u73af\u5883 \u4e0b\u8f7dmingw mingw\u5b98\u7f51\u4e0b\u8f7d codeblock \u6216\u8005\u4e0b\u8f7dcodeblock\uff0c\u5e26gcc\u7f16\u8bd1\u5668\u7684\uff08codeblocks-17.12mingw-setup.exe\uff09 \u6dfb\u52a0\u73af\u5883\u53d8\u91cf \u5728\u547d\u4ee4\u884c\u4e2d\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c\u5e76\u6709\u5bf9\u5e94\u63d0\u793a\u8868\u793a\u914d\u7f6e\u6210\u529f E:\\git_rep\\applib\\cauto>gcc -version gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0 Copyright (C) 2018 Free Software Foundation, Inc. \u4e0b\u8f7d\u6e90\u7801\u5e76\u7f16\u8bd1 E:\\git_rep\\applib\\cauto>make.bat \u6267\u884c\u7f16\u8bd1\u751f\u6210\u7684test\u7a0b\u5e8f E:\\git_rep\\applib\\cauto>test.exe usrp 2019.12.29 10:00:39.15 debug: init usrp 2019.12.29 10:00:39.22 debug: width: 1920 hight:1080 \u4f7f\u7528\u65b9\u6cd5 api \u5728app_api.h\u6587\u4ef6\u4e2d \u6309\u952e \u6309\u4e0b\u6309\u952e key_down(KEY_A); \u677e\u5f00\u6309\u952e key_up(KEY_A); \u5355\u51fb key_click(KEY_A);//\u6a21\u62df\u6309\u952e A key_shift(KEY_B);//\u6a21\u62df\u6309\u952e shift + B key_alt(KEY_A);//\u6a21\u62df\u6309\u952e alt + A key_ctl(KEY_A);//\u6a21\u62df\u6309\u952e ctrl + A \u53cc\u51fb double_click(KEY_A); \u591a\u51fb key_clicks_mul(KEY_A, 5, 0);//\u6a21\u62df\u6309\u952eA 5\u6b21\uff0c\u95f4\u96940\u6beb\u79d2 \u591a\u4e2a\u6309\u952e key_num_t ctrl_k[] = {KEY_CTRL, KEY_A}; mul_keys_click(ctrl_k, sizeof(ctrl_k)/sizeof(key_num_t), 0);//\u95f4\u96940\u6beb\u79d2 /*\u7b49\u6548\u4e8e*/ key_down(KEY_CTRL); key_down(KEY_A); key_up(KEY_A); key_up(KEY_CTRL); \u9f20\u6807 \u6309\u952e\uff08\u64cd\u4f5c\u65b9\u6cd5\u540c\u952e\u76d8\u6309\u952e\uff09 KEY_MOUSE_L(\u5de6\u952e) KEY_MOUSE_M\uff08\u4e2d\u95f4\u6309\u952e\uff09 KEY_MOUSE_R\uff08\u53f3\u952e\uff09 key_click(KEY_MOUSE_L);// \u5355\u51fb\u9f20\u6807\u5de6\u952e \u79fb\u52a8 \u5750\u6807\u7cfb\u8bf4\u660e\uff1a\u5de6\u4e0a\u89d2\u5750\u6807\u4e3a\uff080,0\uff09\uff0c \u5411\u53f3\uff0cx\u5750\u6807\u589e\u52a0\uff0c \u5411\u4e0b\uff0cy\u5750\u6807\u589e\u52a0 pos_t cur; mouse_move(100, 100);// \u9f20\u6807\u79fb\u52a8\u5230\uff08x=100,y=100\uff09 mouse_get(&cur);// \u83b7\u53d6\u5f53\u524d\u9f20\u6807\u5750\u6807 \u6eda\u8f6e mouse_wheel(100); // up 100 mouse_wheel(-100);// down 100 \u56fe\u50cf \u627e\u56fe\u50cf u32 cnts; int i; /* \u67e5\u627e7.bmp\u56fe\u50cf,\u8fd4\u56de\u67e5\u627e\u5230\u7684\u4e2a\u6570\u53ca\u5750\u6807 0.99 \u8868\u793a\u76f8\u4f3c\u5ea6 NULL\uff0c\u67e5\u627e\u7684\u533a\u57df\u4f20\u5165\u7a7a\uff0c\u8868\u793a\u5168\u5c4f\u67e5\u627e */ cnts = find_img(\"7.bmp\", 0.99, NULL); M_INFO(\"cnts:%u\\n\", cnts); for(i = 0; i < cnts; i ++) { M_INFO(\"x:%u y:%u\\n\", find_res[i].x, find_res[i].y); } \u67e5\u627e\uff0c\u5e76\u70b9\u51fb\u56fe\u50cf click_img(\"=.bmp\", 0.99, NULL);","title":"\u4e2d\u6587"},{"location":"chinese/#_1","text":"cauto\u7c7b\u4f3c\u4e8epython\u7684pyautogui\uff0c\u4f46cauto\u4f7f\u7528c\u8bed\u8a00\u5f00\u53d1\uff0c\u76ee\u524d\u652f\u6301\u4ee5\u4e0b\u64cd\u4f5c\uff1a - \u6a21\u62df\u952e\u76d8\u6309\u952e\u70b9\u51fb - \u6a21\u62df\u9f20\u6807\u6309\u952e\u70b9\u51fb - \u6a21\u62df\u9f20\u6807\u7684\u79fb\u52a8 - \u6a21\u62df\u9f20\u6807\u6eda\u8f6e\u6eda\u52a8 - \u53ef\u4ee5\u5728\u5c4f\u5e55\u4e0a\u67e5\u627e\u56fe\u7247\u7684\u4f4d\u7f6e \u76ee\u524d\u53ea\u652f\u6301windows\u73af\u5883","title":"\u7b80\u4ecb"},{"location":"chinese/#_2","text":"\u4e0b\u8f7dmingw mingw\u5b98\u7f51\u4e0b\u8f7d codeblock \u6216\u8005\u4e0b\u8f7dcodeblock\uff0c\u5e26gcc\u7f16\u8bd1\u5668\u7684\uff08codeblocks-17.12mingw-setup.exe\uff09 \u6dfb\u52a0\u73af\u5883\u53d8\u91cf \u5728\u547d\u4ee4\u884c\u4e2d\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c\u5e76\u6709\u5bf9\u5e94\u63d0\u793a\u8868\u793a\u914d\u7f6e\u6210\u529f E:\\git_rep\\applib\\cauto>gcc -version gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0 Copyright (C) 2018 Free Software Foundation, Inc. \u4e0b\u8f7d\u6e90\u7801\u5e76\u7f16\u8bd1 E:\\git_rep\\applib\\cauto>make.bat \u6267\u884c\u7f16\u8bd1\u751f\u6210\u7684test\u7a0b\u5e8f E:\\git_rep\\applib\\cauto>test.exe usrp 2019.12.29 10:00:39.15 debug: init usrp 2019.12.29 10:00:39.22 debug: width: 1920 hight:1080","title":"\u7f16\u8bd1\u73af\u5883"},{"location":"chinese/#_3","text":"api \u5728app_api.h\u6587\u4ef6\u4e2d","title":"\u4f7f\u7528\u65b9\u6cd5"},{"location":"chinese/#_4","text":"\u6309\u4e0b\u6309\u952e key_down(KEY_A); \u677e\u5f00\u6309\u952e key_up(KEY_A); \u5355\u51fb key_click(KEY_A);//\u6a21\u62df\u6309\u952e A key_shift(KEY_B);//\u6a21\u62df\u6309\u952e shift + B key_alt(KEY_A);//\u6a21\u62df\u6309\u952e alt + A key_ctl(KEY_A);//\u6a21\u62df\u6309\u952e ctrl + A \u53cc\u51fb double_click(KEY_A); \u591a\u51fb key_clicks_mul(KEY_A, 5, 0);//\u6a21\u62df\u6309\u952eA 5\u6b21\uff0c\u95f4\u96940\u6beb\u79d2 \u591a\u4e2a\u6309\u952e key_num_t ctrl_k[] = {KEY_CTRL, KEY_A}; mul_keys_click(ctrl_k, sizeof(ctrl_k)/sizeof(key_num_t), 0);//\u95f4\u96940\u6beb\u79d2 /*\u7b49\u6548\u4e8e*/ key_down(KEY_CTRL); key_down(KEY_A); key_up(KEY_A); key_up(KEY_CTRL);","title":"\u6309\u952e"},{"location":"chinese/#_5","text":"\u6309\u952e\uff08\u64cd\u4f5c\u65b9\u6cd5\u540c\u952e\u76d8\u6309\u952e\uff09 KEY_MOUSE_L(\u5de6\u952e) KEY_MOUSE_M\uff08\u4e2d\u95f4\u6309\u952e\uff09 KEY_MOUSE_R\uff08\u53f3\u952e\uff09 key_click(KEY_MOUSE_L);// \u5355\u51fb\u9f20\u6807\u5de6\u952e \u79fb\u52a8 \u5750\u6807\u7cfb\u8bf4\u660e\uff1a\u5de6\u4e0a\u89d2\u5750\u6807\u4e3a\uff080,0\uff09\uff0c \u5411\u53f3\uff0cx\u5750\u6807\u589e\u52a0\uff0c \u5411\u4e0b\uff0cy\u5750\u6807\u589e\u52a0 pos_t cur; mouse_move(100, 100);// \u9f20\u6807\u79fb\u52a8\u5230\uff08x=100,y=100\uff09 mouse_get(&cur);// \u83b7\u53d6\u5f53\u524d\u9f20\u6807\u5750\u6807 \u6eda\u8f6e mouse_wheel(100); // up 100 mouse_wheel(-100);// down 100","title":"\u9f20\u6807"},{"location":"chinese/#_6","text":"\u627e\u56fe\u50cf u32 cnts; int i; /* \u67e5\u627e7.bmp\u56fe\u50cf,\u8fd4\u56de\u67e5\u627e\u5230\u7684\u4e2a\u6570\u53ca\u5750\u6807 0.99 \u8868\u793a\u76f8\u4f3c\u5ea6 NULL\uff0c\u67e5\u627e\u7684\u533a\u57df\u4f20\u5165\u7a7a\uff0c\u8868\u793a\u5168\u5c4f\u67e5\u627e */ cnts = find_img(\"7.bmp\", 0.99, NULL); M_INFO(\"cnts:%u\\n\", cnts); for(i = 0; i < cnts; i ++) { M_INFO(\"x:%u y:%u\\n\", find_res[i].x, find_res[i].y); } \u67e5\u627e\uff0c\u5e76\u70b9\u51fb\u56fe\u50cf click_img(\"=.bmp\", 0.99, NULL);","title":"\u56fe\u50cf"},{"location":"english/","text":"English introduction cauto is like python's pyautogui\uff0ccauto developed in c\uff0cnow support\uff1a - simulate keyboard click - simulate mouse click - mouse move - mouse wheel - find image position on screen now only support windows building download mingw mingw codeblock or codeblock with gcc compiler \uff08codeblocks-17.12mingw-setup.exe\uff09 add environment variable run cmd E:\\git_rep\\applib\\cauto>gcc -version gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0 Copyright (C) 2018 Free Software Foundation, Inc. download source code and compile E:\\git_rep\\applib\\cauto>make.bat run test.exe E:\\git_rep\\applib\\cauto>test.exe usrp 2019.12.29 10:00:39.15 debug: init usrp 2019.12.29 10:00:39.22 debug: width: 1920 hight:1080 usage api is in app_api.h key key press key_down(KEY_A); key up key_up(KEY_A); click key_click(KEY_A);//key A key_shift(KEY_B);//key shift + B key_alt(KEY_A);//key alt + A key_ctl(KEY_A);//key ctrl + A double click double_click(KEY_A); multi click key_clicks_mul(KEY_A, 5, 0);//click key A 5 times 2\uff0cinterval 0 ms multi keys key_num_t ctrl_k[] = {KEY_CTRL, KEY_A}; mul_keys_click(ctrl_k, sizeof(ctrl_k)/sizeof(key_num_t), 0);//interval 0 ms /*Equivalent to*/ key_down(KEY_CTRL); key_down(KEY_A); key_up(KEY_A); key_up(KEY_CTRL); mouse key\uff08same to keyboard \uff09 KEY_MOUSE_L(left key ) KEY_MOUSE_M\uff08Middle key \uff09 KEY_MOUSE_R\uff08right key \uff09 key_click(KEY_MOUSE_L);// click mouse's left key motion Coordinate System\uff1atop left corner is\uff080,0\uff09\uff0c to right \uff0cx coordinate add\uff0c to down\uff0cy coordinate add pos_t cur; mouse_move(100, 100);// move mouse to \uff08x=100,y=100\uff09 mouse_get(&cur);// get mouse's position wheel mouse_wheel(100); // up 100 mouse_wheel(-100);// down 100 image find image u32 cnts; int i; /* find 7.bmp image ,return count and position 0.99 means similarity NULL\uff0cfind rectangle ,NULL means all screen */ cnts = find_img(\"7.bmp\", 0.99, NULL); M_INFO(\"cnts:%u\\n\", cnts); for(i = 0; i < cnts; i ++) { M_INFO(\"x:%u y:%u\\n\", find_res[i].x, find_res[i].y); } find and click image click_img(\"=.bmp\", 0.99, NULL);","title":"English"},{"location":"english/#introduction","text":"cauto is like python's pyautogui\uff0ccauto developed in c\uff0cnow support\uff1a - simulate keyboard click - simulate mouse click - mouse move - mouse wheel - find image position on screen now only support windows","title":"introduction"},{"location":"english/#building","text":"download mingw mingw codeblock or codeblock with gcc compiler \uff08codeblocks-17.12mingw-setup.exe\uff09 add environment variable run cmd E:\\git_rep\\applib\\cauto>gcc -version gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0 Copyright (C) 2018 Free Software Foundation, Inc. download source code and compile E:\\git_rep\\applib\\cauto>make.bat run test.exe E:\\git_rep\\applib\\cauto>test.exe usrp 2019.12.29 10:00:39.15 debug: init usrp 2019.12.29 10:00:39.22 debug: width: 1920 hight:1080","title":"building"},{"location":"english/#usage","text":"api is in app_api.h","title":"usage"},{"location":"english/#key","text":"key press key_down(KEY_A); key up key_up(KEY_A); click key_click(KEY_A);//key A key_shift(KEY_B);//key shift + B key_alt(KEY_A);//key alt + A key_ctl(KEY_A);//key ctrl + A double click double_click(KEY_A); multi click key_clicks_mul(KEY_A, 5, 0);//click key A 5 times 2\uff0cinterval 0 ms multi keys key_num_t ctrl_k[] = {KEY_CTRL, KEY_A}; mul_keys_click(ctrl_k, sizeof(ctrl_k)/sizeof(key_num_t), 0);//interval 0 ms /*Equivalent to*/ key_down(KEY_CTRL); key_down(KEY_A); key_up(KEY_A); key_up(KEY_CTRL);","title":"key"},{"location":"english/#mouse","text":"key\uff08same to keyboard \uff09 KEY_MOUSE_L(left key ) KEY_MOUSE_M\uff08Middle key \uff09 KEY_MOUSE_R\uff08right key \uff09 key_click(KEY_MOUSE_L);// click mouse's left key motion Coordinate System\uff1atop left corner is\uff080,0\uff09\uff0c to right \uff0cx coordinate add\uff0c to down\uff0cy coordinate add pos_t cur; mouse_move(100, 100);// move mouse to \uff08x=100,y=100\uff09 mouse_get(&cur);// get mouse's position wheel mouse_wheel(100); // up 100 mouse_wheel(-100);// down 100","title":"mouse"},{"location":"english/#image","text":"find image u32 cnts; int i; /* find 7.bmp image ,return count and position 0.99 means similarity NULL\uff0cfind rectangle ,NULL means all screen */ cnts = find_img(\"7.bmp\", 0.99, NULL); M_INFO(\"cnts:%u\\n\", cnts); for(i = 0; i < cnts; i ++) { M_INFO(\"x:%u y:%u\\n\", find_res[i].x, find_res[i].y); } find and click image click_img(\"=.bmp\", 0.99, NULL);","title":"image"}]}